@model List<Service>
@using System.Security.Claims


@{
    Layout = "_Layout";
}
@if (@User.IsInRole("Admin"))
{
    <div class="container modal-layout" id="addServiceModal">
        <h1 class="text-primary">Entrez le nom du service</h1>
        <form method="post" action="/Services/Add">
            <div class="mb-3">
                <label for="" class="form-label">Nom</label>
                <input type="text" class="form-control" name="Name" id="createName">
            </div>
            <div class="btn-group">
                <button type="button" class="btn btn-outline-danger" id="addServiceModalClose">Annuler</button>
                <button type="submit" class="btn btn-primary" asp-controller="Services" asp-action="Add">Ajouter</button>
            </div>
        </form>
    </div>

    <div class="container modal-layout" id="updateServiceModal">
        <h1 class="text-primary">Entrez le nom du service</h1>
        <form method="post" action="/Services/Add" id="updateForm">
            <div class="mb-3">
                <label for="" class="form-label">Nom</label>
                <input type="text" class="form-control" name="Name" id="updateName">
            </div>
            <div class="btn-group">
                <button type="button" class="btn btn-outline-danger" id="updateServiceModalClose">Annuler</button>
                <button type="submit" class="btn btn-success">Sauvegarder</button>
            </div>
        </form>
    </div>
}
<div class="container wrapper">
    <div class="my-3 d-flex justify-content-between align-items-center">
        <h1>Les Services :</h1>
        @if (@User.IsInRole("Admin"))
        {
            <button class="btn btn-primary" id="addService">+ Ajouter un service</button>
        }
    </div>

    <div class="grid-layout threeColumns">
        @foreach (var service in Model)
        {
            <a href="/Services/Details/@service.ServiceId" class="sm-card d-flex gap-3 flex-column">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="text-primary fw-bold sm-card-title" id="name-@service.ServiceId" data-name="@service.Name">@service.Name</div>
                </div>
                <div class="d-flex justify-content-between align-items-end">
                    <span class="text-secondary fst-italic">@service.Employees.Count().ToString() collaborateurs</span>

                    @if (@User.IsInRole("Admin"))
                    {
                        <form method="post" action="/Services/Delete/@service.ServiceId" class="btn-group">

                            <button type="button" class="btn btn-secondary updateService" data-serviceid="@service.ServiceId" data-name="@service.Name">
                                <i class="fas fa-pen"></i>
                            </button>
                            <button type="submit" class="btn btn-danger">
                                <i class="fas fa-trash"></i>
                            </button>
                        </form>
                    }
                </div>
            </a>
        }
    </div>
</div>


@if (@User.IsInRole("Admin"))
{
    <script defer>
    // Get the modal to create a Service
    const addServiceButton = document.getElementById("addService");
    const addServiceModal = document.getElementById("addServiceModal");
    const addServiceModalClose = document.getElementById("addServiceModalClose");
    
    addServiceButton.addEventListener("click", () => {
        let editNameValue = document.getElementById("name-");
        addServiceModal.classList.add("modal-active");
        document.getElementById("createName").focus();
    });
    
    addServiceModalClose.addEventListener("click", () => {
        addServiceModal.classList.remove("modal-active");
    });
    
    // Get the modal to update a Service
    const updateServiceButton = document.querySelectorAll(".updateService");
    const updateServiceModal = document.getElementById("updateServiceModal");
    const updateServiceModalClose = document.getElementById("updateServiceModalClose");
    const updateServiceForm = document.getElementById("updateForm");
    
    updateServiceButton.forEach(button => {
        button.addEventListener("click", () => {
            updateServiceModal.classList.add("modal-active");
            updateServiceForm.action = `/Services/Update/${button.dataset.serviceid}`;
            document.getElementById("updateName").value = button.dataset.name;
            document.getElementById("updateName").focus();
            
        });
    });
    
    updateServiceModalClose.addEventListener("click", () => {
        updateServiceModal.classList.remove("modal-active");
    });
    
    //Pressing Escape closes the modals
    document.addEventListener("keydown", (e) => {
        if (e.key === "Escape") {
            addServiceModal.classList.remove("modal-active");
            updateServiceModal.classList.remove("modal-active");
        }
    });
</script>
}